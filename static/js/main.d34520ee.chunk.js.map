{"version":3,"sources":["facetrack.js","components/lights.js","images/char_idle.png","images/char_blockL.png","images/char_blockR.png","textures.js","hooks/useStore.js","components/GameManager.js","hooks/useInterval.js","Ball.js","components/Gauge.js","images/UI_Launch_BG.jpg","images/UI_Launch_Inactive.png","images/UI_PlayAgain_Inactive.png","images/UI_Loading.png","components/AppManager.js","images/UI_Score_Graphic.png","components/ScorePrompt.js","images/UI_RapidFire_Graphic.png","components/RFirePrompt.js","components/Scene.js","components/Mascots.js","App.js","index.js"],"names":["model","ctx","videoWidth","videoHeight","video","canvas","browsCt","browsAvg","browsRoll","rollSize","i","first","outputScale","browsRaisedEvent","Event","trackingReadyEvent","state","setupCamera","a","document","getElementById","navigator","mediaDevices","getUserMedia","audio","facingMode","stream","srcObject","Promise","resolve","onloadedmetadata","renderPrediction","estimateFaces","predictions","radius","width","save","beginPath","arc","height","Math","PI","strokeStyle","stroke","clip","drawImage","restore","length","forEach","prediction","keypoints","scaledMesh","fillStyle","dispatchEvent","requestAnimationFrame","tf","play","querySelector","style","getContext","translate","scale","lineWidth","facemesh","maxFaces","KeyLight","brightness","color","intensity","position","lookAt","penumbra","castShadow","FillLight","RimLight","rotation","char_idle","TextureLoader","load","idleImg","char_blockL","blockLImg","char_blockR","blockRImg","appStates","gaugePositions","useStore","create","set","appState","setAppState","x","timerRunning","setTimerRunning","gaugeRunning","setGaugeRunning","gaugeColor","setGaugeColor","rapidFire","setRapidFire","ballReady","setBallReady","gaugePosition","setGaugePosition","timeLeft","resetTime","decTime","toFixed","points","resetPoints","inc","charTexture","setCharTexture","scorePActive","setScorePActive","rFirePActive","setRFirePActive","GameManager","props","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Text","fontSize","anchorX","anchorY","outlineWidth","outlineColor","streakCounter","BallIn","group","useLoader","GLTFLoader","nodes","materials","animations","actions","useState","THREE","mixer","idle","clipAction","setLoop","LoopOnce","uncacheClip","useFrame","delta","ballActive","reset","setTimeout","shotBuffering","limitingShots","update","ref","dispose","name","geometry","ball","material","BallOutL","guageRunning","BallOutR","BallRapid","toast","ballNum","RapidBalls","Array","fill","map","_","Balls","handleBrowsRaised","event","React","addEventListener","Gauge","time","clock","getElapsedTime","sin","args","attach","AppManager","loaded","setLoaded","handleTrackingReady","startGame","className","src","playAgainButton","alt","onClick","splash","launchButton","loadingButton","ScorePrompt","spring","useSpring","config","mass","tension","friction","precision","to","opacity","img","score","RFirePrompt","fire","Model","Mesh002","RoyalBlue","Mesh002_1","White","Mesh002_2","BG_logo","Mesh","Mesh_1","net","floor","bg","useGLTF","transparent","App","camera","onCreated","fallback","main","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.d34520ee.chunk.js","sourcesContent":["import * as facemesh from \"@tensorflow-models/facemesh\";\r\nimport * as tf from \"@tensorflow/tfjs-core\";\r\n// import Stats from \"stats.js\";\r\n\r\nlet model, ctx, videoWidth, videoHeight, video, canvas;\r\nlet browsCt = 0;\r\nlet browsAvg = 0;\r\nlet browsRoll = [];\r\nlet rollSize = 20;\r\nfor (let i = 0; i < rollSize; i++) {\r\n  browsRoll[i] = 0;\r\n}\r\nlet first = true;\r\n\r\nconst outputScale = 1.5; // higher is smaller\r\nconst outputZoom = 2.5; // 2 is no zoom\r\n\r\nconst browsRaisedEvent = new Event('browsRaised');\r\nconst trackingReadyEvent = new Event('trackingReady');\r\n\r\n// const stats = new Stats();\r\nconst state = {\r\n  backend: \"webgl\",\r\n  maxFaces: 1,\r\n  triangulateMesh: false\r\n};\r\n\r\nasync function setupCamera() {\r\n  video = document.getElementById(\"video\");\r\n  const stream = await navigator.mediaDevices.getUserMedia({\r\n    audio: false,\r\n    video: {\r\n      facingMode: \"user\"\r\n    }\r\n  });\r\n  video.srcObject = stream;\r\n  return new Promise((resolve) => {\r\n    video.onloadedmetadata = () => {\r\n      resolve(video);\r\n    };\r\n  });\r\n}\r\nasync function renderPrediction() {\r\n  // stats.begin();\r\n  const predictions = await model.estimateFaces(video);\r\n\r\n  let radius = canvas.width / outputZoom;\r\n  ctx.save();\r\n  ctx.beginPath();\r\n  ctx.arc(canvas.width / 2, canvas.height / 2, radius, 0, 2 * Math.PI);\r\n\r\n  ctx.strokeStyle = \"blue\";\r\n  ctx.stroke();\r\n  ctx.clip();\r\n\r\n  ctx.drawImage(\r\n    video,\r\n    0,\r\n    0,\r\n    videoWidth,\r\n    videoHeight,\r\n    0,\r\n    0,\r\n    canvas.width,\r\n    canvas.height\r\n  );\r\n  ctx.restore();\r\n  ctx.stroke();\r\n\r\n  //442 258\r\n  if (predictions.length > 0) {\r\n    predictions.forEach((prediction) => {\r\n      const keypoints = prediction.scaledMesh;\r\n      browsRoll[browsCt] = keypoints[257][1] - keypoints[443][1];\r\n      if (browsRoll[browsCt] > browsAvg + 0.5) {\r\n        ctx.fillStyle = \"#00ff00\";\r\n        if (first) {\r\n          first = false;\r\n          // setTimeout(function(){ first = true }, 1000);\r\n          document.dispatchEvent(browsRaisedEvent);\r\n        }\r\n      } else {\r\n        ctx.fillStyle = \"#ffffff\"; \r\n        first= true\r\n      }\r\n      browsCt++;\r\n      if (browsCt >= rollSize) browsCt = 0;\r\n      browsAvg = 0;\r\n      for (var i = 0; i < rollSize; i++) browsAvg += browsRoll[i];\r\n      browsAvg /= rollSize;\r\n\r\n      // THIS IS WHERE DRAWING HAPPENS\r\n      // for (let i = 0; i < keypoints.length; i++) {\r\n      //   const x = keypoints[i][0];\r\n      //   const y = keypoints[i][1];\r\n      //   ctx.beginPath();\r\n      //   ctx.arc(x/outputScale, y/outputScale, 1 /* radius */, 0, 2 * Math.PI);\r\n      //   ctx.fill();\r\n      // }\r\n    });\r\n  }\r\n  // stats.end();\r\n  requestAnimationFrame(renderPrediction);\r\n}\r\nexport async function main() {\r\n  await tf.setBackend(state.backend);\r\n  // stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\r\n  // document.getElementById(\"main\").appendChild(stats.dom);\r\n  await setupCamera();\r\n  video.play();\r\n  videoWidth = video.videoWidth;\r\n  videoHeight = video.videoHeight;\r\n  video.width = videoWidth;\r\n  video.height = videoHeight;\r\n  canvas = document.getElementById(\"output\");\r\n  canvas.width = videoWidth/outputScale;\r\n  canvas.height = videoHeight/outputScale;\r\n  const canvasContainer = document.querySelector(\".canvas-wrapper\");\r\n  canvasContainer.style = `width: ${videoWidth}px; height: ${videoHeight}px`;\r\n  ctx = canvas.getContext(\"2d\");\r\n  ctx.translate(canvas.width, 0);\r\n  ctx.scale(-1, 1);\r\n  ctx.fillStyle = \"#32EEDB\";\r\n  ctx.strokeStyle = \"blue\";\r\n  ctx.lineWidth = 0.5;\r\n  model = await facemesh.load({ maxFaces: state.maxFaces });\r\n  document.dispatchEvent(trackingReadyEvent);\r\n  renderPrediction();\r\n}","import React from 'react';\r\n\r\nexport const KeyLight = ({ brightness, color }) => {\r\n  return (\r\n    <rectAreaLight\r\n      width={3}\r\n      height={3}\r\n      color={color}\r\n      intensity={brightness}\r\n      position={[-2, 0, 5]}\r\n      lookAt={[0, 0, 0]}\r\n      penumbra={1}\r\n      castShadow\r\n    />\r\n  );\r\n}\r\nexport const FillLight = ({ brightness, color }) => {\r\n  return (\r\n    <rectAreaLight\r\n      width={3}\r\n      height={3}\r\n      intensity={brightness}\r\n      color={color}\r\n      position={[2, 1, 4]}\r\n      lookAt={[0, 0, 0]}\r\n      penumbra={2}\r\n      castShadow\r\n    />\r\n  );\r\n}\r\n\r\nexport const RimLight = ({ brightness, color }) => {\r\n  return (\r\n    <rectAreaLight\r\n      width={2}\r\n      height={2}\r\n      intensity={brightness}\r\n      color={color}\r\n      position={[1, 4, -2]}\r\n      rotation={[0, 180, 0]}\r\n      castShadow\r\n    />\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/char_idle.b764698b.png\";","export default __webpack_public_path__ + \"static/media/char_blockL.cc6e41f4.png\";","export default __webpack_public_path__ + \"static/media/char_blockR.fb28e20b.png\";","import idleImg from './images/char_idle.png';\r\nimport blockLImg from './images/char_blockL.png';\r\nimport blockRImg from './images/char_blockR.png';\r\nimport { TextureLoader } from 'three';\r\n\r\nexport const char_idle = new TextureLoader().load(idleImg);\r\nexport const char_blockL = new TextureLoader().load(blockLImg);\r\nexport const char_blockR = new TextureLoader().load(blockRImg);","import create from 'zustand';\r\nimport {char_idle} from '../textures';\r\n\r\nconst appStates= {\r\n  SPLASH: 'splash',\r\n  DIRECTIONS: 'directions',\r\n  COUNTDOWN: 'countdown',\r\n  PLAYING: 'playing',\r\n  END: 'end',\r\n  PHOTOTAKEN: 'phototaken'\r\n}\r\n\r\nconst gaugePositions= {\r\n  LEFT: 'left',\r\n  MIDDLE: 'middle',\r\n  RIGHT: 'right'\r\n}\r\n\r\nconst gameLength = 30;\r\n\r\nexport const useStore = create((set) => ({\r\n  appState: appStates.SPLASH,\r\n  setAppState: (x) => set((state) => ({ appState: x})),\r\n  timerRunning: false,\r\n  setTimerRunning: (x) => set((state) => ({ timerRunning: x})),\r\n  gaugeRunning: false,\r\n  setGaugeRunning: (x) => set((state) => ({ gaugeRunning: x})),\r\n  gaugeColor: 'hotpink',\r\n  setGaugeColor: (x) => set((state) => ({ gaugeColor: x})),\r\n  rapidFire: false,\r\n  setRapidFire: (x) => set((state) => ({ rapidFire: x})),\r\n  ballReady: true,\r\n  setBallReady: (x) => set((state) => ({ ballReady: x })),\r\n  gaugePosition: gaugePositions.LEFT,\r\n  setGaugePosition: (x) => set((state) => ({ gaugePosition: x})),\r\n  timeLeft: gameLength,\r\n  resetTime: () => set((state) => ({ timeLeft: gameLength})),\r\n  decTime: () => {\r\n    set((state) => ({ timeLeft: (state.timeLeft - .1).toFixed(1)}));\r\n  },\r\n  points: 0,\r\n  resetPoints: () => set((state) => ({points: state.points = 0})),\r\n  inc: () => set((state) => ({ points: state.points + 2})),\r\n  charTexture: char_idle,\r\n  setCharTexture: (x) => set((state) => ({charTexture: x})),\r\n  scorePActive: 0,\r\n  setScorePActive: (x) => set((state) => ({scorePActive: x})),\r\n  rFirePActive: 0,\r\n  setRFirePActive: (x) => set((state) => ({rFirePActive: x})),\r\n}));","import React from 'react';\r\nimport { useStore } from '../hooks/useStore';\r\nimport { Text } from '@react-three/drei';\r\nimport { useInterval } from '../hooks/useInterval';\r\n\r\nconst appStates= {\r\n  SPLASH: 'splash',\r\n  DIRECTIONS: 'directions',\r\n  COUNTDOWN: 'countdown',\r\n  PLAYING: 'playing',\r\n  END: 'end',\r\n  PHOTOTAKEN: 'phototaken'\r\n}\r\n\r\nexport const GameManager = (props) => {\r\n  const [ timeLeft, decTime, points, appState, setAppState, setGaugeRunning ] = useStore((state) => [\r\n    state.timeLeft,\r\n    state.decTime,\r\n    state.points,\r\n    state.appState,\r\n    state.setAppState,\r\n    state.setGaugeRunning,\r\n  ]);\r\n  useInterval(\r\n    () => {\r\n      if(appState === appStates.PLAYING){\r\n        decTime();\r\n        if(timeLeft <= 0.1){\r\n          setAppState(appStates.END);\r\n          setGaugeRunning(false);\r\n        }\r\n      }\r\n    },\r\n    100,\r\n  );\r\n  return (\r\n    <group position={[.5,3,0]}>\r\n      <Text\r\n        fontSize={.7}\r\n        color=\"black\" // default\r\n        anchorX=\"left\" // default\r\n        anchorY=\"bottom\" // default\r\n        outlineWidth={.05}\r\n        outlineColor=\"#ffffff\"\r\n      >\r\n        {`${timeLeft}\\n${points}`}\r\n      </Text>\r\n    </group>\r\n  );\r\n}","import { useRef, useEffect } from 'react';\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  });\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (typeof savedCallback?.current !== 'undefined') {\r\n        savedCallback.current();\r\n      }\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};","// Auto-generated by https://github.com/react-spring/gltfjsx\r\n\r\nimport * as THREE from \"three\"\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\nimport { useLoader, useFrame } from \"react-three-fiber\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { LoopOnce } from \"three\"\r\nimport { useStore } from './hooks/useStore';\r\nimport {char_idle, char_blockL, char_blockR} from './textures';\r\n\r\nlet streakCounter = 0;\r\n\r\nfunction BallIn({ ...props }) {\r\n  const group = useRef()\r\n  const [inc, gaugePosition, gaugeRunning, setGaugeColor, setRapidFire, rapidFire, setScorePActive, setRFirePActive] = useStore((state) => [\r\n    state.inc,\r\n    state.gaugePosition,\r\n    state.gaugeRunning,\r\n    state.setGaugeColor,\r\n    state.setRapidFire,\r\n    state.rapidFire,\r\n    state.setScorePActive,\r\n    state.setRFirePActive\r\n  ]);\r\n  const { nodes, materials, animations } = useLoader(GLTFLoader, \"/masketball_BallAnimW.glb\")\r\n  // const texture = useLoader(THREE.TextureLoader, \"/stacy.jpg\")\r\n\r\n  const actions = useRef()\r\n  const [mixer] = useState(() => new THREE.AnimationMixer())\r\n  useEffect(() => {\r\n    actions.current = { idle: mixer.clipAction(animations[0], group.current) }\r\n    actions.current.idle.setLoop(LoopOnce)\r\n    // actions.current.idle.play()\r\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip))\r\n  }, [])\r\n\r\n\r\n  useFrame((state, delta) => {\r\n    \r\n    // console.log(gaugePosition);\r\n    if(gaugeRunning && !rapidFire && gaugePosition === \"center\" && ballActive >= 0){\r\n        actions.current.idle.reset();\r\n        actions.current.idle.play();\r\n        ballActive = -1;\r\n        setGaugeColor('green');\r\n        setScorePActive(1);\r\n        setTimeout(function() { setGaugeColor('hotpink') }, 200);\r\n        setTimeout(function() { inc(); setScorePActive(0); }, 750);\r\n        streakCounter++;\r\n        if(streakCounter===2){\r\n          setGaugeColor('lightblue');\r\n          setTimeout(function() { setGaugeColor('lightblue') }, 201);\r\n          setRapidFire(true);\r\n          setRFirePActive(1);\r\n          shotBuffering = false;\r\n          limitingShots = false;\r\n          setTimeout(function() { setRapidFire(false); streakCounter=0; limitingShots=true; setRFirePActive(0); }, 3000);\r\n        }\r\n    }\r\n    mixer.update(delta)\r\n  })\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <mesh\r\n        name=\"ball\"\r\n        geometry={nodes.ball.geometry}\r\n        material={materials.ball}\r\n        rotation={[Math.PI / 2, Math.PI / 2, 0]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nfunction BallOutL({ ...props }) {\r\n  const group = useRef()\r\n  const [gaugePosition, guageRunning, setGaugeColor, rapidFire, setCharTexture] = useStore((state) => [\r\n    state.gaugePosition,\r\n    state.gaugeRunning,\r\n    state.setGaugeColor,\r\n    state.rapidFire,\r\n    state.setCharTexture\r\n  ]);\r\n  const { nodes, materials, animations } = useLoader(GLTFLoader, \"/masketball_BallAnim3.glb\")\r\n  // const texture = useLoader(THREE.TextureLoader, \"/stacy.jpg\")\r\n\r\n  const actions = useRef()\r\n  const [mixer] = useState(() => new THREE.AnimationMixer())\r\n  useEffect(() => {\r\n    actions.current = { idle: mixer.clipAction(animations[0], group.current) }\r\n    actions.current.idle.setLoop(LoopOnce)\r\n    // actions.current.idle.play()\r\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip))\r\n  }, [])\r\n\r\n\r\n  useFrame((state, delta) => {\r\n    \r\n    // console.log(gaugePosition);\r\n    // if(gaugePosition === \"center\" && props.toast === ballActive){\r\n      if(guageRunning && !rapidFire && gaugePosition === \"left\" && ballActive >= 0){\r\n        actions.current.idle.reset();\r\n        actions.current.idle.play();\r\n        ballActive = -1;\r\n        setGaugeColor('red');\r\n        setTimeout(function() { setGaugeColor('hotpink') }, 200);\r\n        setTimeout(function() { setCharTexture(char_blockL) }, 200);\r\n        setTimeout(function() { setCharTexture(char_idle) }, 400);\r\n        streakCounter=0;\r\n        // inc();\r\n    }\r\n    mixer.update(delta)\r\n  })\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group position={[-0.83, 28.21, 154.68]}>\r\n        <group rotation={[-0.02, 0, 0]} scale={[1, 1, 1]}>\r\n          <group rotation={[0, Math.PI / 2, 0]} />\r\n        </group>\r\n      </group>\r\n      <mesh\r\n        name=\"ball\"\r\n        material={materials.ball}\r\n        geometry={nodes.ball.geometry}\r\n        rotation={[-Math.PI / 2, -Math.PI / 2, 0]}\r\n        scale={[1, 1, 1]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nfunction BallOutR({ ...props }) {\r\n  const group = useRef()\r\n  const [gaugePosition, guageRunning, setGaugeColor, rapidFire, setCharTexture] = useStore((state) => [\r\n    state.gaugePosition,\r\n    state.gaugeRunning,\r\n    state.setGaugeColor,\r\n    state.rapidFire,\r\n    state.setCharTexture\r\n  ]);\r\n  const { nodes, materials, animations } = useLoader(GLTFLoader, \"/masketball_BallAnimLblock.glb\")\r\n  // const texture = useLoader(THREE.TextureLoader, \"/stacy.jpg\")\r\n\r\n  const actions = useRef()\r\n  const [mixer] = useState(() => new THREE.AnimationMixer())\r\n  useEffect(() => {\r\n    actions.current = { idle: mixer.clipAction(animations[0], group.current) }\r\n    actions.current.idle.setLoop(LoopOnce)\r\n    // actions.current.idle.play()\r\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip))\r\n  }, [])\r\n\r\n\r\n  useFrame((state, delta) => {\r\n    \r\n    // console.log(gaugePosition);\r\n    // if(gaugePosition === \"center\" && props.toast === ballActive){\r\n      if(guageRunning && !rapidFire && gaugePosition === \"right\" && ballActive >= 0){\r\n        actions.current.idle.reset();\r\n        actions.current.idle.play();\r\n        ballActive = -1;\r\n        setGaugeColor('red');\r\n        setTimeout(function() { setGaugeColor('hotpink') }, 200);\r\n        setTimeout(function() { setCharTexture(char_blockR) }, 200);\r\n        setTimeout(function() { setCharTexture(char_idle) }, 400);\r\n        streakCounter=0;\r\n        // inc();\r\n    }\r\n    mixer.update(delta)\r\n  })\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group position={[-0.83, 28.21, 154.68]}>\r\n        <group rotation={[-0.02, 0, 0]} scale={[1, 1, 1]}>\r\n          <group rotation={[0, Math.PI / 2, 0]} />\r\n        </group>\r\n      </group>\r\n      <mesh\r\n        name=\"ball\"\r\n        material={materials.ball}\r\n        geometry={nodes.ball.geometry}\r\n        rotation={[-Math.PI / 2, -Math.PI / 2, 0]}\r\n        scale={[1, 1, 1]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\nfunction BallRapid({ ...props }) {\r\n  const group = useRef()\r\n  const [inc, rapidFire] = useStore((state) => [\r\n    state.inc,\r\n    state.rapidFire\r\n  ]);\r\n  const { nodes, materials, animations } = useLoader(GLTFLoader, \"/masketball_BallAnimW.glb\")\r\n  // const texture = useLoader(THREE.TextureLoader, \"/stacy.jpg\")\r\n\r\n  const actions = useRef()\r\n  const [mixer] = useState(() => new THREE.AnimationMixer())\r\n  useEffect(() => {\r\n    actions.current = { idle: mixer.clipAction(animations[0], group.current) }\r\n    actions.current.idle.setLoop(LoopOnce)\r\n    // actions.current.idle.play()\r\n    return () => animations.forEach((clip) => mixer.uncacheClip(clip))\r\n  }, [])\r\n\r\n\r\n  useFrame((state, delta) => {\r\n    \r\n    // console.log(gaugePosition);\r\n    if(rapidFire && ballActive === props.toast){\r\n        actions.current.idle.reset();\r\n        actions.current.idle.play();\r\n        ballActive = -1;\r\n        setTimeout(function() { inc() }, 750);\r\n    }\r\n    mixer.update(delta)\r\n  })\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <mesh\r\n        name=\"ball\"\r\n        geometry={nodes.ball.geometry}\r\n        material={materials.ball}\r\n        rotation={[Math.PI / 2, Math.PI / 2, 0]}\r\n      />\r\n    </group>\r\n  )\r\n}\r\n\r\n\r\nlet ballNum = 0;\r\nlet ballActive = -1;\r\nconst ballIterations = 5;\r\n\r\nfunction RapidBalls(){\r\n  return new Array(ballIterations).fill().map((_, i) => {\r\n    return <BallRapid key={i} toast={i} scale={[.1,.1,.1]} rotation={[0,Math.PI,0]}/>\r\n  })\r\n}\r\n\r\nlet limitingShots = true;\r\nlet shotBuffering = false;\r\n\r\nexport function Balls() {\r\n  const handleBrowsRaised = (event) => {\r\n      if(!shotBuffering){\r\n        ballActive = ballNum;\r\n        ballNum++;\r\n        if(ballNum>=ballIterations) ballNum = 0;\r\n        if(limitingShots){\r\n          shotBuffering=true;\r\n          setTimeout(function() { shotBuffering=false }, 1000);\r\n        } \r\n      }\r\n\r\n  };\r\n  React.useEffect(() => {\r\n    document.addEventListener('browsRaised', handleBrowsRaised);\r\n    return () => {\r\n      document.addEventListener('browsRaised', handleBrowsRaised);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <BallOutL toast={0} scale={[.1,.1,.1]} rotation={[0,Math.PI,0]} />\r\n      <BallOutR toast={0} scale={[.1,.1,.1]} rotation={[0,Math.PI,0]} />\r\n      <BallIn toast={1} scale={[.1,.1,.1]} rotation={[0,Math.PI,0]} />\r\n      <RapidBalls />\r\n    </>\r\n  )\r\n  // return new Array(ballIterations).fill().map((_, i) => {\r\n  //   return <Ball key={i} toast={i} />\r\n  // })\r\n}","import React, { useRef, useState } from 'react';\r\nimport { useStore } from '../hooks/useStore';\r\nimport { useFrame } from 'react-three-fiber';\r\nimport { Circle, Plane } from '@react-three/drei';\r\n// import * as THREE from \"three\"\r\n// import { TextureLoader } from 'three/src/loaders/TextureLoader.js'\r\n\r\nconst gaugePositions= {\r\n  LEFT: 'left',\r\n  CENTER: 'center',\r\n  RIGHT: 'right'\r\n}\r\n\r\nexport const Gauge = (props) => {\r\n  const [setGaugePosition, gaugePosition, gaugeRunning, gaugeColor, rapidFire] = useStore((state) => [\r\n    state.setGaugePosition,\r\n    state.gaugePosition,\r\n    state.gaugeRunning,\r\n    state.gaugeColor,\r\n    state.rapidFire\r\n  ]);\r\n  const ref = useRef();\r\n\r\n  useFrame((state) => {\r\n    if(gaugeRunning === true){\r\n      if(!rapidFire){\r\n        const time = state.clock.getElapsedTime();\r\n        ref.current = Math.sin(time*2);\r\n      }\r\n      else{\r\n        ref.current = 0;\r\n      }\r\n      if(gaugePosition!==gaugePositions.CENTER && ref.current>-.5 && ref.current<.5){\r\n        setGaugePosition(gaugePositions.CENTER);\r\n      } else if(gaugePosition!==gaugePositions.LEFT && ref.current>=.5){\r\n        setGaugePosition(gaugePositions.LEFT);\r\n      } else if(gaugePosition!==gaugePositions.RIGHT && ref.current<=-.5){\r\n        setGaugePosition(gaugePositions.RIGHT);\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <group ref={ref} position={[0,0,1]}>\r\n      <Circle args={[1.5, 64]}>\r\n        <Plane args={[.4, .4]} rotation={[0,0,.8]} position={[0,1.45,.1]} >\r\n          <meshBasicMaterial attach=\"material\" color={gaugeColor} />\r\n        </Plane>\r\n      </Circle>\r\n      <Circle args={[1.1, 64]} position={[0,0,.2]} rotation={[0,0,ref.current]}>\r\n        <meshBasicMaterial attach=\"material\" color=\"blue\" />\r\n        <Plane args={[.2, .2]} rotation={[0,0,.8]} position={[0,1.45,.1]} >\r\n          <meshBasicMaterial attach=\"material\" color=\"blue\" />\r\n        </Plane>\r\n      </Circle>\r\n    </group>\r\n  );\r\n}\r\n\r\n//1.2 to -1.2","export default __webpack_public_path__ + \"static/media/UI_Launch_BG.f2ab948a.jpg\";","export default __webpack_public_path__ + \"static/media/UI_Launch_Inactive.073edc2d.png\";","export default __webpack_public_path__ + \"static/media/UI_PlayAgain_Inactive.b3defc2e.png\";","export default __webpack_public_path__ + \"static/media/UI_Loading.93cf17ce.png\";","import React, { useState } from 'react';\r\nimport { useStore } from '../hooks/useStore';\r\nimport splash from '../images/UI_Launch_BG.jpg'\r\nimport launchButton from '../images/UI_Launch_Inactive.png'\r\nimport playAgainButton from '../images/UI_PlayAgain_Inactive.png'\r\nimport loadingButton from '../images/UI_Loading.png'\r\n\r\n\r\n\r\nconst appStates= {\r\n  SPLASH: 'splash',\r\n  DIRECTIONS: 'directions',\r\n  COUNTDOWN: 'countdown',\r\n  PLAYING: 'playing',\r\n  END: 'end',\r\n  PHOTOTAKEN: 'phototaken'\r\n}\r\n\r\nexport const AppManager = (props) => {\r\n  const [setAppState, appState, setTimerRunning, resetTime, resetPoints, setGaugeRunning] = useStore((state) => [\r\n    state.setAppState,\r\n    state.appState,\r\n    state.setTimerRunning,\r\n    state.resetTime,\r\n    state.resetPoints,\r\n    state.setGaugeRunning,\r\n  ]);\r\n\r\n  const [loaded, setLoaded] = useState(false)\r\n  const handleTrackingReady = (event) => {\r\n    setLoaded(true);\r\n  };\r\n  React.useEffect(() => {\r\n    document.addEventListener('trackingReady', handleTrackingReady);\r\n    return () => {\r\n      document.addEventListener('trackingReady', handleTrackingReady);\r\n    };\r\n  }, []);\r\n\r\n  const startGame = () =>{\r\n    // document.getElementById(\"splash\").style.display = \"hidden\";\r\n    setAppState(appStates.PLAYING);\r\n    resetTime();\r\n    resetPoints();\r\n    setTimerRunning(true);\r\n    setGaugeRunning(true);\r\n  }\r\n  if(appState === appStates.PLAYING){\r\n    return null;\r\n  } else if (appState === appStates.END){\r\n    return(\r\n      <div className=\"splash\">\r\n        <img className=\"button\" src={playAgainButton} alt=\"splash screen\" onClick={()=>startGame()}/>\r\n      </div> \r\n    )\r\n  }\r\n    return(\r\n      <div className=\"splash\">\r\n        <img src={splash} alt=\"splash screen\" />\r\n        {loaded? <img className=\"button\" src={launchButton} alt=\"splash screen\" onClick={()=>startGame()}/> : <img className=\"button\" src={loadingButton} alt=\"splash screen\" />}\r\n      </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/UI_Score_Graphic.c4b7c98b.png\";","import React, { useState } from 'react';\r\nimport { useStore } from '../hooks/useStore';\r\nimport score from '../images/UI_Score_Graphic.png'\r\nimport {useSpring, animated} from 'react-spring'\r\n\r\n\r\nexport const ScorePrompt = (props) => {\r\n  const [scorePActive,] = useStore((state) => [\r\n    state.scorePActive,\r\n  ]);\r\n\r\n  const { spring } = useSpring({\r\n    spring: scorePActive,\r\n    config: { mass: 5, tension: 800, friction: 50, precision: 0.0001 }\r\n  })\r\n\r\n  const scale = spring.to([0, 1], ['0%', '120%'])\r\n  const opacity = spring.to([0, 1], [0, 1])\r\n\r\n  return(\r\n    <div className=\"splash\">\r\n      <animated.img src={score} alt=\"score!\" style={{opacity: opacity, width: scale}}  />\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/UI_RapidFire_Graphic.86822e0a.png\";","import React from 'react';\r\nimport { useStore } from '../hooks/useStore';\r\nimport fire from '../images/UI_RapidFire_Graphic.png'\r\nimport {useSpring, animated} from 'react-spring'\r\n\r\n\r\nexport const RFirePrompt = (props) => {\r\n  const [rFirePActive,] = useStore((state) => [\r\n    state.rFirePActive,\r\n  ]);\r\n\r\n  const { spring } = useSpring({\r\n    spring: rFirePActive,\r\n    config: { mass: 5, tension: 800, friction: 50, precision: 0.0001 }\r\n  })\r\n\r\n  const scale = spring.to([0, 1], ['0%', '120%'])\r\n  const opacity = spring.to([0, 1], [0, 1])\r\n\r\n  return(\r\n    <div className=\"splash\">\r\n      <animated.img src={fire} alt=\"Rapid Fire!\" style={{opacity: opacity, width: scale}}  />\r\n    </div>\r\n  )\r\n}","\r\nimport React, { useRef } from \"react\"\r\nimport { useLoader } from \"react-three-fiber\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\n// import { useGLTF } from \"@react-three/drei\"\r\n// import { TextureLoader } from 'three/src/loaders/TextureLoader.js'\r\n\r\nexport default function Model(props) {\r\n  const group = useRef()\r\n  // const { nodes, materials } = useGLTF(\"./masketball_Scene.glb\");\r\n  const { nodes, materials } = useLoader(GLTFLoader, \"./m_Scene.glb\");\r\n  \r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group position={[-0.11, 0.54, -3.87]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[0.01, 0.01, 0.01]}>\r\n        <group position={[-10.26, -14.92, -52.54]} rotation={[0, 0, Math.PI]}>\r\n          <mesh geometry={nodes.Mesh002.geometry} material={materials.RoyalBlue} />\r\n          <mesh geometry={nodes.Mesh002_1.geometry} material={materials.White} />\r\n          <mesh geometry={nodes.Mesh002_2.geometry} material={materials.BG_logo} />\r\n        </group>\r\n        <group position={[-10.64, -12.98, -18.84]} rotation={[0, 0, -Math.PI / 2]}>\r\n          <mesh geometry={nodes.Mesh.geometry} material={materials.RoyalBlue} />\r\n          <mesh geometry={nodes.Mesh_1.geometry} material={materials['RoyalBlue.001']} />\r\n          <mesh geometry={nodes.net.geometry} material={materials.White} position={[30.09, 0, 7.31]} />\r\n        </group>\r\n      </group>\r\n      <mesh\r\n        geometry={nodes.floor.geometry}\r\n        material={materials.floor}\r\n        position={[0, -0.35, -1.76]}\r\n        rotation={[Math.PI / 2, 0, 0]}\r\n        scale={[0.01, 0.01, 0.01]}\r\n      />\r\n      <mesh\r\n        geometry={nodes.bg.geometry}\r\n        material={materials.bg}\r\n        position={[0, 1.19, -2.07]}\r\n        rotation={[Math.PI / 2, 0, 1.61]}\r\n        scale={[0.01, 0.01, 0.01]}\r\n      />\r\n    </group>\r\n  )\r\n}","import React, { useRef } from \"react\"\r\nimport { useTexture, useGLTF } from \"@react-three/drei\"\r\nimport { useStore } from '../hooks/useStore';\r\n// import * as textures from '../textures';\r\n// import { TextureLoader } from 'three/src/loaders/TextureLoader.js'\r\n\r\nexport default function Model(props) {\r\n  const [charTexture] = useStore((state) => [\r\n    state.charTexture\r\n  ]);\r\n  const group = useRef()\r\n  // const { nodes, materials } = useLoader(GLTFLoader, '/mblank_CharStill.glb');\r\n  const { nodes } = useGLTF(\"./mblank_CharStill.glb\");\r\n  // const [bL, id, bR] = useTexture(['/char_blockL.png','/char_idle.png','/char_blockR.png']);\r\n  // const textures=[bL,id,bR];\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <mesh geometry={nodes.char_idle.geometry} position={[0, 40.71, 274.33]} >\r\n       <meshStandardMaterial attach=\"material\" map={charTexture} transparent={true}/>\r\n      </mesh>\r\n      {/* <meshMatcapMaterial matcap={texture} attach=\"material\" /> */}\r\n    </group>\r\n  )\r\n}","import React, { Suspense } from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { OrbitControls } from \"@react-three/drei\";\n\nimport { KeyLight, FillLight, RimLight } from './components/lights';\nimport { GameManager } from './components/GameManager'\nimport { Balls } from './Ball'\nimport { Gauge } from './components/Gauge'\nimport { AppManager } from './components/AppManager'\nimport { ScorePrompt } from './components/ScorePrompt'\nimport { RFirePrompt } from './components/RFirePrompt'\nimport Scene from './components/Scene'\nimport Mascots from './components/Mascots'\n// import Mball from './Ball2'\n// import Mball3 from './Ball3'\n\nimport \"./index.css\";\n\n\nexport default function App() {\n  return (\n    <>\n      <AppManager />\n      <ScorePrompt />\n      <RFirePrompt />\n      <Canvas camera={{ position: [0,2,4] }} onCreated={({ camera }) => {camera.lookAt(0,2,0)}}>\n        <GameManager />\n        {/* <OrbitControls /> */}\n        <ambientLight intensity={0.5} />\n        <KeyLight brightness={5.6} color=\"#ffbdf4\" />\n        <FillLight brightness={2.6} color=\"#bdefff\" />\n        <RimLight brightness={54} color=\"#fff\" />\n        <Suspense fallback={null}>\n          <Balls />\n          <Scene scale={[10,10,10]} />\n          <Mascots scale={[.1,.1,.1]} rotation={[0,Math.PI,0]}/>\n          <Gauge />\n        </Suspense>\n      </Canvas>\n    </>\n  );\n}\n\n//scale={[.1,.1,.5]} rotation={[0,Math.PI,0]}","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {main} from './facetrack'\n\nimport App from \"./App\";\n\nmain();\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}